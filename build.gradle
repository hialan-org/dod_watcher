plugins {
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
    id 'java-library'
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
}



version "0.1"
group "usf.sdlc"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut.aws:micronaut-function-aws-api-proxy"
    implementation("io.micronaut.aws:micronaut-function-aws-custom-runtime")
    //END- OAUTH2

    runtimeOnly "org.apache.logging.log4j:log4j-core:2.8.2"
    runtimeOnly "org.apache.logging.log4j:log4j-api:2.8.2"
    runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:2.8.2"
    runtimeOnly "com.amazonaws:aws-lambda-java-log4j2:1.1.0"

    //Hibernate and Mysql
//    implementation "io.micronaut.configuration:micronaut-hibernate-jpa"
//    implementation "io.micronaut.configuration:micronaut-jdbc-hikari"
//    runtime "com.h2database:h2"
    //mysql????
    //    runtime 'mysql:mysql-connector-java:8.0.17'

    //Hibernate-End

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    //Micronaut data
    annotationProcessor 'io.micronaut.data:micronaut-data-processor:1.0.0'
    runtime "io.micronaut.configuration:micronaut-jdbc-hikari"
    compile 'io.micronaut.data:micronaut-data-hibernate-jpa:1.0.0'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.13'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
}

test.classpath += configurations.developmentOnly

mainClassName = "usf.sdlc.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

shadowJar {
    archiveBaseName = "dod"
    archiveClassifier = 'all'
    archiveVersion = ""
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

task buildZip(type: Zip) {
    from sourceSets.main.output
    into('lib') {
        from configurations.compileClasspath
        from configurations.runtimeClasspath
    }
}

task exploded(type: Copy) {
    from sourceSets.main.output
    into "build/exploded"


    into('lib') {
        from configurations.compileClasspath
        from configurations.runtimeClasspath
    }
}

shadowJar.dependsOn exploded